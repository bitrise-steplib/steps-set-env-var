format_version: 4
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - BITRISE_STEP_ID: set-env-var
  - BITRISE_STEP_VERSION: "0.9.1"
  - BITRISE_STEP_GIT_CLONE_URL: https://github.com/bitrise-steplib/steps-set-env-var.git
  - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL
  - VALUE: source-env-var-value 

workflows:
  test:
    before_run:
    - go-tests
    steps:
    - change-workdir:
        title: Switch working dir to test / _tmp dir
        description: |-
          To prevent step testing issues, like referencing relative
          files with just './some-file' in the step's code, which would
          work for testing the step from this directory directly
          but would break if the step is included in another `bitrise.yml`.
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - path::./:
        title: Step Test
        run_if: true
        inputs:
        - value: ${VALUE}
        - destination_keys: DEST_ENV_VAR_1 DEST_ENV_VAR_2 DEST_ENV_VAR_3
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -u
            echo "DEST_ENV_VAR_1: $DEST_ENV_VAR_1"
            echo "DEST_ENV_VAR_2: $DEST_ENV_VAR_2"
            echo "DEST_ENV_VAR_3: $DEST_ENV_VAR_3"

  go-tests:
    before_run:
    - _install-test-tools
    steps:
    - script:
        title: Print Go version
        inputs:
        - content: go version
    - script:
        title: Export go files to test
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -x
            no_vendor_paths="$(go list ./... | grep -v vendor)"
            envman add --key GOLIST --value "$no_vendor_paths"
    - script:
        title: Checking for unchecked errors
        inputs:
        - content: errcheck -asserts=true -blank=true $GOLIST
    - script:
        title: Run Golint
        inputs:
        - content: golint $GOLIST
    - script:
        title: Go test
        inputs:
        - content: go test $GOLIST

  _install-test-tools:
    steps:
    - script:
        title: Install required tools
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -x

            go get -u -v github.com/kisielk/errcheck
            go get -u -v golang.org/x/lint

  # ----------------------------------------------------------------
  # --- Utility workflows
  deps-update:
    title: Update the locked versions of all dependencies
    steps:
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -x

            go get -u -v github.com/golang/dep/cmd/dep
            dep ensure -update -v

  # ----------------------------------------------------------------
  # --- workflows for Releasing
  create-release:
    title: Create Release version
    steps:
    - script:
        title: Create CHANGELOG and git release
        inputs:
        - content: |-
            #!/bin/bash
            set -ex

            go get github.com/bitrise-tools/releaseman

            export CI=true

            releaseman create \
              --version $BITRISE_STEP_VERSION

  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml

  share-this-step:
    envs:
      # if you want to share this step into a StepLib
      - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL
      - BITRISE_STEP_ID: $BITRISE_STEP_ID
      - BITRISE_STEP_VERSION: $BITRISE_STEP_VERSION
      - BITRISE_STEP_GIT_CLONE_URL: $BITRISE_STEP_GIT_CLONE_URL
    description: |-
      If this is the first time you try to share a Step you should
      first call: $ bitrise share

      This will print you a guide, and information about how Step sharing
      works. Please read it at least once!

      As noted in the Step sharing guide you'll have to fork the
      StepLib you want to share this step into. Once you're done with forking
      the repository you should set your own fork's git clone URL
      in the `.bitrise.secrets.yml` file, or here in the `envs` section,
      as the value of the `MY_STEPLIB_REPO_FORK_GIT_URL` environment.

      You're now ready to share this Step, just make sure that
      the `BITRISE_STEP_ID` and `BITRISE_STEP_VERSION`
      environments are set to the desired values!

      To share this Step into a StepLib you can just run: $ bitrise run share-this-step

      Once it finishes the only thing left is to actually create a Pull Request,
      the way described in the guide printed at the end of the process.
    before_run:
    - audit-this-step
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            bitrise share start -c "${MY_STEPLIB_REPO_FORK_GIT_URL}"
            bitrise share create --stepid "${BITRISE_STEP_ID}" --tag "${BITRISE_STEP_VERSION}" --git "${BITRISE_STEP_GIT_CLONE_URL}"
            bitrise share finish
